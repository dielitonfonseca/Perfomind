[1mdiff --git a/src/App.css b/src/App.css[m
[1mindex d7610ad..b8905e0 100644[m
[1m--- a/src/App.css[m
[1m+++ b/src/App.css[m
[36m@@ -374,78 +374,4 @@[m [mform#osForm {[m
 .dialog-footer {[m
   display: flex;[m
   justify-content: flex-end;[m
[31m-}[m
[31m-[m
[31m-/* ... (estilos existentes) */[m
[31m-[m
[31m-/* Estilos para o Pop-up (Modal/Dialog) de Assinatura */[m
[31m-[m
[31m-.dialog-content.signature-dialog {[m
[31m-  width: 90vw;[m
[31m-  height: 80vh;[m
[31m-  max-width: none;[m
[31m-  max-height: none;[m
[31m-}[m
[31m-[m
[31m-.signature-dialog-canvas-container {[m
[31m-  flex-grow: 1;[m
[31m-  display: flex;[m
[31m-  justify-content: center;[m
[31m-  align-items: center;[m
[31m-  width: 100%;[m
[31m-}[m
[31m-[m
[31m-.sigCanvas-popup {[m
[31m-  width: 100%;[m
[31m-  height: 100%;[m
[31m-  background-color: #f0f0f0;[m
[31m-  border: 1px solid #ccc;[m
[31m-  border-radius: 4px;[m
[31m-}[m
[31m-[m
[31m-[m
[31m-.dialog-overlay {[m
[31m-  position: fixed; /* Cobre a tela inteira */[m
[31m-  top: 0;[m
[31m-  left: 0;[m
[31m-  right: 0;[m
[31m-  bottom: 0;[m
[31m-  background-color: rgba(0, 0, 0, 0.7); /* Fundo escuro semi-transparente */[m
[31m-  display: flex;[m
[31m-  align-items: center;[m
[31m-  justify-content: center;[m
[31m-  z-index: 1000; /* Garante que fique acima de todo o conteÃºdo */[m
[31m-}[m
[31m-[m
[31m-.dialog-content {[m
[31m-  background-color: #2c2f38;[m
[31m-  padding: 24px;[m
[31m-  border-radius: 8px;[m
[31m-  max-width: 500px;[m
[31m-  width: 90%;[m
[31m-  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);[m
[31m-  display: flex;[m
[31m-  flex-direction: column;[m
[31m-  gap: 16px;[m
[31m-  color: #e0e0e0;[m
[31m-}[m
[31m-[m
[31m-.dialog-header {[m
[31m-  text-align: center;[m
[31m-}[m
[31m-[m
[31m-.dialog-header h2 {[m
[31m-  margin-top: 0;[m
[31m-  font-size: 1.5rem;[m
[31m-}[m
[31m-[m
[31m-.dialog-header p {[m
[31m-  margin-bottom: 0;[m
[31m-  color: #ccc;[m
[31m-}[m
[31m-[m
[31m-.dialog-footer {[m
[31m-  display: flex;[m
[31m-  justify-content: flex-end;[m
[31m-  gap: 10px;[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/components/Form.js b/src/components/Form.js[m
[1mindex 2315380..2befd2e 100644[m
[1m--- a/src/components/Form.js[m
[1m+++ b/src/components/Form.js[m
[36m@@ -6,7 +6,6 @@[m [mimport { saveAs } from 'file-saver';[m
 import SignatureCanvas from 'react-signature-canvas';[m
 import { ScanLine } from 'lucide-react';[m
 import ScannerDialog from './ScannerDialog';[m
[31m-import SignatureDialog from './SignatureDialog'; // Importa o novo componente[m
 [m
 function Form({ setFormData }) {[m
   const [numero, setNumero] = useState('');[m
[36m@@ -26,8 +25,6 @@[m [mfunction Form({ setFormData }) {[m
   const [tipoAparelho, setTipoAparelho] = useState('VD');[m
   const [tipoChecklist, setTipoChecklist] = useState('PREENCHIDO');[m
   const [isScannerOpen, setScannerOpen] = useState(false);[m
[31m-  const [isSignatureDialogOpen, setSignatureDialogOpen] = useState(false); // Estado para controlar o popup de assinatura[m
[31m-  const [signature, setSignature] = useState(null); // Estado para armazenar a assinatura[m
 [m
   const sigCanvas = useRef(null);[m
   const sigContainer = useRef(null);[m
[36m@@ -109,7 +106,6 @@[m [mObservaÃ§Ãµes: ${observacoes}[m
     setDataVisita(new Date().toISOString().split("T")[0]);[m
     setTipoAparelho('VD');[m
     setTipoChecklist('PREENCHIDO');[m
[31m-    setSignature(null);[m
     if (sigCanvas.current) {[m
       sigCanvas.current.clear();[m
     }[m
[36m@@ -265,16 +261,13 @@[m [mObservaÃ§Ãµes: ${observacoes}[m
       };[m
 [m
       let pngImage = null;[m
[31m-      if (signature) {[m
[31m-        pngImage = await pdfDoc.embedPng(signature);[m
[31m-      } else if (sigCanvas.current && !sigCanvas.current.isEmpty()) {[m
[32m+[m[32m      if (sigCanvas.current && !sigCanvas.current.isEmpty()) {[m
         const assinaturaDataUrl = sigCanvas.current.getCanvas().toDataURL('image/png');[m
         pngImage = await pdfDoc.embedPng(assinaturaDataUrl);[m
       } else {[m
         console.log("Canvas de assinatura vazio. Assinatura nÃ£o serÃ¡ adicionada ao PDF.");[m
       }[m
 [m
[31m-[m
       const tecnicoFinal = (tecnicoSelect === 'nao_achei' ? tecnicoManual : tecnicoSelect).trim();[m
       const defeitoFinal = isSamsung ? defeitoSelect : defeitoManual;[m
       const reparoFinal = isSamsung ? reparoSelect : reparoManual;[m
[36m@@ -394,12 +387,6 @@[m [mObservaÃ§Ãµes: ${observacoes}[m
     setScannerOpen(false);[m
   }, []);[m
 [m
[31m-  const handleSaveSignature = (signatureData) => {[m
[31m-    setSignature(signatureData);[m
[31m-    setSignatureDialogOpen(false);[m
[31m-  };[m
[31m-[m
[31m-[m
   return ([m
     <>[m
       {isScannerOpen && ([m
[36m@@ -408,13 +395,6 @@[m [mObservaÃ§Ãµes: ${observacoes}[m
           onClose={() => setScannerOpen(false)}[m
         />[m
       )}[m
[31m-      {isSignatureDialogOpen && ([m
[31m-        <SignatureDialog[m
[31m-          onSave={handleSaveSignature}[m
[31m-          onClose={() => setSignatureDialogOpen(false)}[m
[31m-        />[m
[31m-      )}[m
[31m-[m
       <div className="checkbox-container">[m
         <label>[m
           <input[m
[36m@@ -648,11 +628,24 @@[m [mObservaÃ§Ãµes: ${observacoes}[m
             <label htmlFor="dataVisita">Data da Visita:</label>[m
             <input name="dataVisita" type="date" onChange={(e) => setDataVisita(e.target.value)} value={dataVisita} />[m
 [m
[31m-            <div className="signature-section-container">[m
[31m-                <button type="button" onClick={() => setSignatureDialogOpen(true)}>[m
[31m-                  Coletar Assinatura[m
[31m-                </button>[m
[31m-                {signature && <img src={signature} alt="Assinatura do cliente" style={{ border: '1px solid #e0dbdbff', borderRadius: '4px', marginTop: '10px' }} />}[m
[32m+[m[32m            <div className="signature-section-container" ref={sigContainer}>[m
[32m+[m[32m              <p className="signature-label">Assinatura do Cliente:</p>[m
[32m+[m[32m              <SignatureCanvas[m
[32m+[m[32m                penColor="black"[m
[32m+[m[32m                canvasProps={{[m
[32m+[m[32m                  height: 100,[m
[32m+[m[32m                  className: 'sigCanvas',[m
[32m+[m[32m                  style: {[m
[32m+[m[32m                    backgroundColor: '#444',[m
[32m+[m[32m                    border: '1px solid #e0dbdbff',[m
[32m+[m[32m                    borderRadius: '4px'[m
[32m+[m[32m                  }[m
[32m+[m[32m                }}[m
[32m+[m[32m                ref={sigCanvas}[m
[32m+[m[32m              />[m
[32m+[m[32m              <button type="button" onClick={() => sigCanvas.current.clear()} className="clear-signature-button">[m
[32m+[m[32m                Limpar Assinatura[m
[32m+[m[32m              </button>[m
             </div>[m
             <button type="button" onClick={preencherPDF} style={{ marginTop: '10px' }}>Gerar Checklist PDF!</button>[m
           </>[m
[1mdiff --git a/src/components/SignatureDialog.js b/src/components/SignatureDialog.js[m
[1mdeleted file mode 100644[m
[1mindex 0cf6475..0000000[m
[1m--- a/src/components/SignatureDialog.js[m
[1m+++ /dev/null[m
[36m@@ -1,81 +0,0 @@[m
[31m-import React, { useRef, useEffect } from 'react';[m
[31m-import SignatureCanvas from 'react-signature-canvas';[m
[31m-[m
[31m-const Dialog = ({ children, open, onClose }) => {[m
[31m-  if (!open) return null;[m
[31m-  return ([m
[31m-    <div className="dialog-overlay" onClick={onClose}>[m
[31m-      <div className="dialog-content signature-dialog" onClick={e => e.stopPropagation()}>[m
[31m-        {children}[m
[31m-      </div>[m
[31m-    </div>[m
[31m-  );[m
[31m-};[m
[31m-[m
[31m-const SignatureDialog = ({ onSave, onClose }) => {[m
[31m-  const sigCanvas = useRef(null);[m
[31m-[m
[31m-  useEffect(() => {[m
[31m-    const resizeCanvas = () => {[m
[31m-      if (sigCanvas.current) {[m
[31m-        const canvas = sigCanvas.current.getCanvas();[m
[31m-        const dialogContent = canvas.closest('.dialog-content');[m
[31m-        if (dialogContent) {[m
[31m-          const { width, height } = dialogContent.getBoundingClientRect();[m
[31m-          canvas.width = width * 0.95; [m
[31m-          canvas.height = height * 0.75;[m
[31m-        }[m
[31m-      }[m
[31m-    };[m
[31m-[m
[31m-    window.addEventListener('resize', resizeCanvas);[m
[31m-    resizeCanvas();[m
[31m-[m
[31m-    return () => {[m
[31m-      window.removeEventListener('resize', resizeCanvas);[m
[31m-    };[m
[31m-  }, []);[m
[31m-[m
[31m-  const handleSave = () => {[m
[31m-    if (sigCanvas.current) {[m
[31m-      const signature = sigCanvas.current.toDataURL();[m
[31m-      onSave(signature);[m
[31m-    }[m
[31m-  };[m
[31m-[m
[31m-  const clearCanvas = () => {[m
[31m-    if (sigCanvas.current) {[m
[31m-      sigCanvas.current.clear();[m
[31m-    }[m
[31m-  };[m
[31m-[m
[31m-[m
[31m-  return ([m
[31m-    <Dialog open={true} onClose={onClose}>[m
[31m-      <div className="dialog-header">[m
[31m-        <h2>Coletar Assinatura</h2>[m
[31m-        <p>Por favor, assine no campo abaixo.</p>[m
[31m-      </div>[m
[31m-      <div className="signature-dialog-canvas-container">[m
[31m-        <SignatureCanvas[m
[31m-          ref={sigCanvas}[m
[31m-          penColor="black"[m
[31m-          canvasProps={{ className: 'sigCanvas-popup' }}[m
[31m-        />[m
[31m-      </div>[m
[31m-      <div className="dialog-footer">[m
[31m-        <button type="button" onClick={clearCanvas}>[m
[31m-          Limpar[m
[31m-        </button>[m
[31m-        <button type="button" onClick={handleSave}>[m
[31m-          Salvar Assinatura[m
[31m-        </button>[m
[31m-        <button type="button" onClick={onClose}>[m
[31m-          Cancelar[m
[31m-        </button>[m
[31m-      </div>[m
[31m-    </Dialog>[m
[31m-  );[m
[31m-};[m
[31m-[m
[31m-export default SignatureDialog;[m
\ No newline at end of file[m
